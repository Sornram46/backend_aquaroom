generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")    // ‡πÉ‡∏ä‡πâ direct host ‡∏ï‡∏≠‡∏ô migrate/introspect
  // shadowDatabaseUrl = env("DIRECT_URL") // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ô‡πÉ‡∏ä‡πâ `prisma migrate dev
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  description     String?
  price           Decimal   @db.Decimal(10, 2)
  image_url       String?
  is_popular      Boolean?  @default(false)
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  stock           Int       @default(0)
  image_url_two   String?
  image_url_three String?
  image_url_four  String?
  updated_at      DateTime  @default(now())

  // ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©
  shipping_cost_bangkok   Decimal? @default(0) @db.Decimal(10, 2)
  shipping_cost_provinces Decimal? @default(0) @db.Decimal(10, 2)
  shipping_cost_remote    Decimal? @default(0) @db.Decimal(10, 2)
  free_shipping_threshold Decimal? @db.Decimal(10, 2)
  delivery_time           String?  @default("2-3 ‡∏ß‡∏±‡∏ô")
  shipping_notes          String?
  special_handling        Boolean  @default(false)

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö
  specifications  String?   @db.Text  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥ (JSON ‡∏´‡∏£‡∏∑‡∏≠ HTML)
  features        String?   @db.Text  // ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©
  shipping_info   String?   @db.Text  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
  warranty_info   String?   @db.Text  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
  return_policy   String?   @db.Text  // ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  care_instructions String? @db.Text  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•
  dimensions      String?   @db.VarChar(255)  // ‡∏Ç‡∏ô‡∏≤‡∏î
  weight          String?   @db.VarChar(100)  // ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
  material        String?   @db.VarChar(255)  // ‡∏ß‡∏±‡∏™‡∏î‡∏∏
  country_origin  String?   @db.VarChar(100)  // ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï


  // üê† ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©
  has_special_shipping   Boolean  @default(false) // ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  special_shipping_base  Decimal? @db.Decimal(10, 2) // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (80‡∏ø)
  special_shipping_qty   Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏° (4 ‡∏ï‡∏±‡∏ß)
  special_shipping_extra Decimal? @db.Decimal(10, 2) // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° (10‡∏ø/‡∏ï‡∏±‡∏ß)
  special_shipping_notes String? // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©

  // Relations...
  order_items         order_items[]
  product_categories  product_categories[]
  inventory_setting   inventory_settings?
  stock_movements     stock_movements[]
  inventory_alerts    inventory_alerts[]
  purchase_items      purchase_order_items[]
  reviews             reviews[]
  inventory_movements inventory_movements[]

  @@map("products")
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° model ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
model shipping_category_rules {
  id                  Int      @id @default(autoincrement())
  category_id         Int      @unique
  rule_type           String   @db.VarChar(20) // 'default', 'special', 'fish'
  base_cost           Decimal  @db.Decimal(10, 2) // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
  quantity_threshold  Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°
  extra_cost_per_item Decimal? @db.Decimal(10, 2) // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô
  max_quantity        Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  description         String? // ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏é
  is_active           Boolean  @default(true)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  // Relations
  category categories @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@map("shipping_category_rules")
}

model categories {
  id                 Int                      @id @default(autoincrement())
  name               String                   @unique
  description        String?
  image_url_cate     String?
  is_active          Boolean                  @default(true)
  created_at         DateTime                 @default(now())
  updated_at         DateTime                 @default(now())
  product_categories product_categories[]
  shipping_rule      shipping_category_rules? // ‡πÄ‡∏û‡∏¥‡πà‡∏° relation
}

model order_items {
  id         Int       @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  total      Decimal   @db.Decimal(10, 2)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  orders     orders    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   Product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([order_id], map: "idx_order_items_order_id")
}

// ‡∏£‡∏ß‡∏° orders model ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
model orders {
  id           Int     @id @default(autoincrement())
  user_id      Int
  order_number String  @unique @db.VarChar(20)
  address_id   Int
  total_amount Decimal @db.Decimal(10, 2)
  subtotal     Decimal @db.Decimal(10, 2)
  shipping_fee Decimal @default(0) @db.Decimal(10, 2)
  discount     Decimal @default(0) @db.Decimal(10, 2)

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
  coupon_id       Int? // ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
  coupon_code     String?  @db.VarChar(50) // ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
  coupon_discount Decimal? @db.Decimal(10, 2) // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á

  payment_method     String    @db.VarChar(20)
  payment_status     String    @default("pending") @db.VarChar(20)
  order_status       String    @default("processing") @db.VarChar(20)
  notes              String?
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  updated_at         DateTime? @default(now()) @db.Timestamp(6)
  tracking_number    String?   @db.VarChar(100)
  shipping_company   String?   @db.VarChar(100)
  estimated_delivery DateTime? @db.Timestamp(6)

  // Additional fields for compatibility
  status           String? @default("pending") // for backward compatibility
  shipping_address String?
  phone            String?

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  order_items    order_items[]
  user_addresses user_addresses   @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users          users            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment_proofs payment_proofs[]
  payment        payments? // ‡πÄ‡∏û‡∏¥‡πà‡∏° relation ‡∏Å‡∏±‡∏ö payments

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
  coupon        Coupon?       @relation("OrderCoupon", fields: [coupon_id], references: [id])
  coupon_usages CouponUsage[]

  @@index([order_number], map: "idx_orders_order_number")
  @@index([order_status], map: "idx_orders_order_status")
  @@index([payment_status], map: "idx_orders_payment_status")
  @@index([user_id], map: "idx_orders_user_id")
  @@index([coupon_id])
}

model payment_proofs {
  id                Int       @id @default(autoincrement())
  order_id          Int
  file_path         String
  original_filename String?   @db.VarChar(255)
  file_size         Int?
  uploaded_at       DateTime? @default(now()) @db.Timestamp(6)
  status            String?   @default("pending") @db.VarChar(20)
  notes             String?
  orders            orders    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([order_id], map: "idx_payment_proofs_order_id")
}

model product_categories {
  product_id  Int
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    Product    @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, category_id])
}

model user_addresses {
  id            Int       @id @default(autoincrement())
  user_id       Int
  name          String    @db.VarChar(255)
  phone         String    @db.VarChar(20)
  address_line1 String
  address_line2 String?
  district      String    @db.VarChar(100)
  city          String    @db.VarChar(100)
  province      String    @db.VarChar(100)
  postal_code   String    @db.VarChar(10)
  is_default    Boolean?  @default(false)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  orders        orders[]
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_default], map: "idx_user_addresses_is_default")
  @@index([user_id], map: "idx_user_addresses_user_id")
}

// ‡∏£‡∏ß‡∏° users model ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
model users {
  id                     Int       @id @default(autoincrement())
  name                   String    @db.VarChar(255)
  email                  String?   @unique @db.VarChar(255)
  password               String?
  role                   String?   @default("customer") @db.VarChar(50)
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  auth_provider          String?   @default("local") @db.VarChar(50)
  auth_provider_id       String?   @db.VarChar(255)
  avatar                 String?
  is_email_verified      Boolean?  @default(false)
  is_active              Boolean?  @default(true)
  updated_at             DateTime? @default(now()) @db.Timestamp(6)
  last_login             DateTime? @db.Timestamp(6)
  reset_password_token   String?   @db.VarChar(255)
  reset_password_expires DateTime? @db.Timestamp(6)
  login_attempts         Int?      @default(0)
  last_failed_login      DateTime? @db.Timestamp(6)
  account_locked_until   DateTime? @db.Timestamp(6)

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  orders                 orders[]
  user_addresses         user_addresses[]
  reviews                reviews[]
  verified_payments      payments[]       @relation("VerifiedBy")
  payment_logs           payment_logs[]
  coupon_usages          CouponUsage[]
  page_views             page_views[]     // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

  @@unique([email, auth_provider], map: "unique_email_per_provider")
  @@map("users")
}

model homepage_setting {
  id            Int     @id @default(autoincrement())
  //fill ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á logo
  logo_url      String? // URL ‡∏Ç‡∏≠‡∏á logo ‡∏´‡∏•‡∏±‡∏Å
  logo_alt_text String? // Alt text ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö logo
  logo_width    Int?    @default(120) // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á logo
  logo_height   Int?    @default(40) // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á logo
  dark_logo_url String? // URL ‡∏Ç‡∏≠‡∏á logo ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö dark mode

  hero_title          String?
  hero_subtitle       String?
  carousel_1_title    String?
  carousel_1_subtitle String?
  carousel_1_image    String?
  carousel_2_title    String?
  carousel_2_subtitle String?
  carousel_2_image    String?
  carousel_3_title    String?
  carousel_3_subtitle String?
  carousel_3_image    String?
  why_choose_title    String?
  why_choose_subtitle String?
  quality_title       String?
  quality_subtitle    String?
  quality_feature_1   String?
  quality_feature_2   String?
  quality_feature_3   String?

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô Statistics
  stat_1_number String?
  stat_1_label  String?
  stat_2_number String?
  stat_2_label  String?
  stat_3_number String?
  stat_3_label  String?
  stat_4_number String?
  stat_4_label  String?

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô Customer Review
  review_text  String? @db.Text
  review_name  String?
  review_title String?

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô Features
  feature_1_title String?
  feature_1_desc  String? @db.Text
  feature_1_note  String?
  feature_2_title String?
  feature_2_desc  String? @db.Text
  feature_2_note  String?
  feature_3_title String?
  feature_3_desc  String? @db.Text
  feature_3_note  String?
  feature_4_title String?
  feature_4_desc  String? @db.Text
  feature_4_note  String?

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô Call to Action
  cta_title         String?
  cta_subtitle      String?
  cta_button_1_text String?
  cta_button_1_link String?
  cta_button_2_text String?
  cta_button_2_link String?



  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö URL ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
  carousel_1_button_text String? // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏° carousel 1
  carousel_1_button_url  String? // URL ‡∏õ‡∏∏‡πà‡∏° carousel 1
  carousel_2_button_text String? // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏° carousel 2  
  carousel_2_button_url  String? // URL ‡∏õ‡∏∏‡πà‡∏° carousel 2
  carousel_3_button_text String? // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏° carousel 3
  carousel_3_button_url  String? // URL ‡∏õ‡∏∏‡πà‡∏° carousel 3


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model about_setting {
  id Int @id @default(autoincrement())

  // Hero Section
  hero_title    String?
  hero_subtitle String?

  // Our Story Section
  story_title     String?
  story_content   String? @db.Text
  story_image_url String?

  // Mission Section
  mission_title    String?
  mission_subtitle String?

  // Mission Cards (3 cards)
  mission_1_title String?
  mission_1_desc  String?
  mission_2_title String?
  mission_2_desc  String?
  mission_3_title String?
  mission_3_desc  String?

  // Team Section
  team_title    String?
  team_subtitle String?

  // Team Members (4 members)
  team_1_name  String?
  team_1_role  String?
  team_1_image String?
  team_2_name  String?
  team_2_role  String?
  team_2_image String?
  team_3_name  String?
  team_3_role  String?
  team_3_image String?
  team_4_name  String?
  team_4_role  String?
  team_4_image String?

  // Values Section
  values_title    String?
  values_subtitle String?

  // Values Items
  value_1_title String?
  value_1_desc  String?
  value_2_title String?
  value_2_desc  String?
  value_3_title String?
  value_3_desc  String?
  value_4_title String?
  value_4_desc  String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model inventory_settings {
  id               Int      @id @default(autoincrement())
  product_id       Int      @unique
  min_stock        Int      @default(0) // ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
  max_stock        Int? // ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
  reorder_point    Int? // ‡∏à‡∏∏‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
  reorder_quantity Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
  cost_price       Decimal? @db.Decimal(10, 2) // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏∏‡∏ô
  supplier_info    String? // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢
  storage_location String? // ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  shelf_life_days  Int? // ‡∏≠‡∏≤‡∏¢‡∏∏‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ß‡∏±‡∏ô)
  notes            String?
  is_active        Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  // Relations
  product          Product            @relation(fields: [product_id], references: [id], onDelete: Cascade)
  stock_movements  stock_movements[]
  inventory_alerts inventory_alerts[]
}

// ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model stock_movements {
  id                   Int       @id @default(autoincrement())
  product_id           Int
  inventory_setting_id Int?
  movement_type        String    @db.VarChar(20) // 'in', 'out', 'adjustment', 'transfer'
  quantity             Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  quantity_before      Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  quantity_after       Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  unit_cost            Decimal?  @db.Decimal(10, 2) // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢
  total_cost           Decimal?  @db.Decimal(10, 2) // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
  reason               String?   @db.VarChar(100) // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
  reference_type       String?   @db.VarChar(50) // 'order', 'purchase', 'adjustment', 'return'
  reference_id         Int? // ID ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (order_id, purchase_id, etc.)
  batch_number         String?   @db.VarChar(50) // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÅ‡∏ö‡∏ó‡∏ä‡πå
  expiry_date          DateTime? @db.Timestamp(6) // ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
  notes                String?   @db.Text // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
  created_by           Int? // ‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
  created_at           DateTime  @default(now())

  // Relations
  product           Product             @relation(fields: [product_id], references: [id], onDelete: Cascade)
  inventory_setting inventory_settings? @relation(fields: [inventory_setting_id], references: [id])

  @@index([product_id])
  @@index([movement_type])
  @@index([created_at])
  @@index([reference_type, reference_id])
}

// ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model inventory_alerts {
  id                   Int       @id @default(autoincrement())
  product_id           Int?
  inventory_setting_id Int?
  alert_type           String    @db.VarChar(50) // 'low_stock', 'out_of_stock', 'expired', 'reorder'
  alert_level          String    @default("info") @db.VarChar(20) // 'info', 'warning', 'danger', 'critical'
  title                String    @db.VarChar(255) // ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  message              String    @db.Text // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  current_stock        Int? // ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  threshold_value      Int? // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
  is_read              Boolean   @default(false)
  is_active            Boolean   @default(true)
  priority             Int       @default(1) // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (1-5)
  auto_generated       Boolean   @default(true) // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  read_at              DateTime? @db.Timestamp(6)
  resolved_at          DateTime? @db.Timestamp(6)
  resolved_by          Int?

  // Relations
  product           Product?            @relation(fields: [product_id], references: [id], onDelete: Cascade)
  inventory_setting inventory_settings? @relation(fields: [inventory_setting_id], references: [id])

  @@index([product_id])
  @@index([alert_type])
  @@index([is_read])
  @@index([is_active])
  @@index([created_at])
}

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Purchase Orders)
model purchase_orders {
  id               Int       @id @default(autoincrement())
  po_number        String    @unique @db.VarChar(50) // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
  supplier_name    String    @db.VarChar(255) // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢
  supplier_contact String?   @db.VarChar(255) // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
  total_amount     Decimal   @db.Decimal(10, 2) // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
  status           String    @default("pending") @db.VarChar(20) // 'pending', 'confirmed', 'shipped', 'received', 'cancelled'
  order_date       DateTime  @default(now())
  expected_date    DateTime? @db.Timestamp(6) // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
  received_date    DateTime? @db.Timestamp(6) // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á
  notes            String?   @db.Text
  created_by       Int?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt

  // Relations
  purchase_items purchase_order_items[]
}

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
model purchase_order_items {
  id                Int       @id @default(autoincrement())
  purchase_order_id Int
  product_id        Int
  quantity_ordered  Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á
  quantity_received Int       @default(0) // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
  unit_cost         Decimal   @db.Decimal(10, 2) // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢
  total_cost        Decimal   @db.Decimal(10, 2) // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
  batch_number      String?   @db.VarChar(50)
  expiry_date       DateTime? @db.Timestamp(6)
  notes             String?   @db.Text

  // Relations
  purchase_order purchase_orders @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade)
  product        Product         @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([purchase_order_id])
  @@index([product_id])
}

// ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
model payments {
  id             Int    @id @default(autoincrement())
  order_id       Int    @unique
  payment_method String // 'promptpay', 'bank_transfer', 'cash'
  payment_status String @default("pending") // 'pending', 'paid', 'failed', 'refunded'

  // PromptPay QR Code
  qr_code_data String? // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• QR Code
  qr_code_url  String? // URL ‡∏Ç‡∏≠‡∏á QR Code image

  // Payment Details
  amount       Decimal @db.Decimal(10, 2)
  reference_id String? @unique // Reference number ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô

  // Receipt/Slip Information
  slip_image_url   String? // URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏™‡∏•‡∏¥‡∏õ
  slip_upload_time DateTime? // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ

  // OCR Results
  ocr_amount     Decimal?  @db.Decimal(10, 2) // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å OCR
  ocr_date       DateTime? // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å OCR
  ocr_time       String? // ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≤‡∏Å OCR
  ocr_ref_number String? // ‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å OCR
  ocr_confidence Float? // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏≠‡∏á OCR (0-1)
  ocr_raw_data   Json? // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• OCR ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°

  // Verification
  verified_by        Int? // ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
  verified_at        DateTime? // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
  verification_notes String? // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô

  // Auto-verification
  auto_verified     Boolean @default(false) // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  auto_verify_score Float? // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

  // Timestamps
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  expires_at DateTime? // ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô

  // Relations
  order            orders         @relation(fields: [order_id], references: [id], onDelete: Cascade)
  verified_by_user users?         @relation("VerifiedBy", fields: [verified_by], references: [id])
  payment_logs     payment_logs[] // ‡πÄ‡∏û‡∏¥‡πà‡∏° relation ‡∏Å‡∏±‡∏ö payment_logs

  @@map("payments")
}

// ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≤‡∏£‡∏°‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
model payment_settings {
  id Int @id @default(autoincrement())

  // PromptPay Settings
  promptpay_enabled Boolean @default(false)
  promptpay_id      String? // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏´‡∏£‡∏∑‡∏≠ Tax ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PromptPay
  promptpay_name    String? // ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ PromptPay
  promptpay_qr_type String? @default("phone") // 'phone' ‡∏´‡∏£‡∏∑‡∏≠ 'tax_id'

  // Bank Transfer Settings
  bank_transfer_enabled Boolean @default(true)
 

  // COD Settings
  cod_enabled    Boolean  @default(false)
  cod_fee        Decimal? @default(0) @db.Decimal(10, 2)
  cod_max_amount Decimal? @default(0) @db.Decimal(10, 2) // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

  // Credit Card Settings (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
  credit_card_enabled Boolean @default(false)

  // Auto-verification Settings
  auto_verify_enabled      Boolean  @default(false)
  auto_verify_amount_limit Decimal? @default(10000) @db.Decimal(10, 2)

  // General Settings
  payment_timeout_hours Int     @default(24)
  require_payment_proof Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  bank_accounts         bank_accounts[]

  @@map("payment_settings")
}


// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á model ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö bank_accounts
model bank_accounts {
  id                  Int      @id @default(autoincrement())
  payment_setting_id  Int
  bank_name          String   @db.VarChar(255)
  account_name       String   @db.VarChar(255)
  account_number     String   @db.VarChar(50)
  branch             String?  @db.VarChar(255)
  bank_icon          String?  
  sort_order         Int      @default(0)
  is_active          Boolean  @default(true)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  
  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö payment_settings
  payment_settings    payment_settings @relation(fields: [payment_setting_id], references: [id])
  
  @@map("bank_accounts")
}



// Log ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
model payment_logs {
  id         Int      @id @default(autoincrement())
  payment_id Int
  action     String // 'created', 'slip_uploaded', 'verified', 'failed', etc.
  old_status String?
  new_status String?
  details    Json? // ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  created_by Int? // ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (null = system)
  created_at DateTime @default(now())

  // Relations
  payment payments @relation(fields: [payment_id], references: [id], onDelete: Cascade)
  user    users?   @relation(fields: [created_by], references: [id])

  @@map("payment_logs")
}

model reviews {
  id         Int      @id @default(autoincrement())
  product_id Int
  user_id    Int
  rating     Int // 1-5 stars
  comment    String?
  created_at DateTime @default(now())

  // Relations
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user    users   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("reviews")
}

// Inventory Management Models
model inventory_movements {
  id             Int      @id @default(autoincrement())
  product_id     Int
  movement_type  String // 'in', 'out', 'adjustment'
  quantity       Int // ‡∏ö‡∏ß‡∏Å = ‡πÄ‡∏Ç‡πâ‡∏≤, ‡∏•‡∏ö = ‡∏≠‡∏≠‡∏Å
  reference_type String? // 'order', 'purchase', 'adjustment', 'return'
  reference_id   Int? // ID ‡∏Ç‡∏≠‡∏á order ‡∏´‡∏£‡∏∑‡∏≠ reference ‡∏≠‡∏∑‡πà‡∏ô
  reason         String? // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
  notes          String?
  created_by     Int? // ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
  created_at     DateTime @default(now())

  // Relations
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("inventory_movements")
}

// ===========================================
// COUPON SYSTEM MODELS
// ===========================================

// ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á/‡∏£‡∏´‡∏±‡∏™‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
model Coupon {
  id          Int     @id @default(autoincrement())
  code        String  @unique @db.VarChar(50) // ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô "SAVE50", "NEWYEAR2024"
  name        String  @db.VarChar(255) // ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
  description String? @db.Text // ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á

  // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  discount_type  String  @db.VarChar(20) // "percentage" ‡∏´‡∏£‡∏∑‡∏≠ "fixed_amount"
  discount_value Decimal @db.Decimal(10, 2) // ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ
  min_order_amount    Decimal? @db.Decimal(10, 2) // ‡∏¢‡∏≠‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
  max_discount_amount Decimal? @db.Decimal(10, 2) // ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö percentage)

  // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ
  usage_limit          Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  usage_count          Int  @default(0) // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
  usage_limit_per_user Int? // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  start_date DateTime @db.Timestamp(6) // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  end_date   DateTime @db.Timestamp(6) // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  is_active Boolean @default(true)

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  applicable_categories String? @db.Text // JSON array ‡∏Ç‡∏≠‡∏á category IDs ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
  applicable_products   String? @db.Text // JSON array ‡∏Ç‡∏≠‡∏á product IDs ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
  minimum_quantity      Int? // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
  created_by String?  @db.VarChar(100) // admin user id ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  coupon_usages CouponUsage[]
  orders        orders[]      @relation("OrderCoupon") // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ô‡∏µ‡πâ

  @@index([code])
  @@index([is_active])
  @@index([start_date, end_date])
  @@index([discount_type])
  @@map("coupons")
}

// ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
model CouponUsage {
  id        Int     @id @default(autoincrement())
  coupon_id Int
  user_id   Int? // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ user system
  email     String? @db.VarChar(255) // ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ email ‡πÅ‡∏ó‡∏ô
  order_id  Int? // ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á order

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  discount_amount Decimal @db.Decimal(10, 2) // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
  order_amount    Decimal @db.Decimal(10, 2) // ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ï‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á

  used_at DateTime @default(now())

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  coupon Coupon  @relation(fields: [coupon_id], references: [id], onDelete: Cascade)
  user   users?  @relation(fields: [user_id], references: [id])
  order  orders? @relation(fields: [order_id], references: [id])

  @@index([coupon_id])
  @@index([user_id])
  @@index([email])
  @@index([used_at])
  @@map("coupon_usages")
}

// ===================================
// ANALYTICS MODELS (‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°)
// ===================================

model page_views {
  id          Int      @id @default(autoincrement())
  page_url    String   @db.VarChar(500)
  user_ip     String?  @db.VarChar(45)
  user_agent  String?  @db.Text
  referrer    String?  @db.VarChar(500)
  session_id  String?  @db.VarChar(100)
  user_id     Int?     // ‡∏ñ‡πâ‡∏≤ user login ‡∏≠‡∏¢‡∏π‡πà
  created_at  DateTime @default(now())
  
  // Relations
  user        users?   @relation(fields: [user_id], references: [id])
  
  @@index([created_at])
  @@index([page_url])
  @@index([user_ip])
  @@map("page_views")
}

model daily_stats {
  id           Int      @id @default(autoincrement())
  date         DateTime @db.Date @unique
  total_views  Int      @default(0)
  unique_views Int      @default(0)
  new_users    Int      @default(0)
  orders_count Int      @default(0)
  revenue      Decimal? @db.Decimal(10, 2) @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  
  @@map("daily_stats")
}

model contact_setting {
  id         Int      @id @default(autoincrement())
  address    String
  phone      String
  email      String
  business_hours_first String?
  business_hours_two   String?
  facebook   String?
  tiktok     String?
  line       String?
  map_embed  String? // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Map iframe
  updated_at DateTime @updatedAt
  created_at DateTime @default(now())
}
